import { createContext, useContext, useState, ReactNode } from 'react';

type Language = 'en' | 'nl';

interface TranslationContextType {
  language: Language;
  setLanguage: (lang: Language) => void;
  t: (key: string) => string;
}

const TranslationContext = createContext<TranslationContextType | undefined>(undefined);

const translations = {
  en: {
    stay_disciplined: "Stay disciplined with your brothers",
    create_account: "Create Account", 
    sign_in: "Sign In",
    honest_agreement: "By continuing, you agree to be honest about your progress and support your brothers in their journey",
    welcome_back: "Welcome Back",
    welcome_back_akhi: "Continue your journey with discipline",
    join_community: "Join the brotherhood of discipline",
    display_name: "Display Name",
    email: "Email",
    password: "Password",
    loading: "Loading...",
    success: "Success",
    error: "Error",
    dont_have_account: "Don't have an account?",
    already_have_account: "Already have an account?",
    sign_up: "Sign Up",
    notifications: "Notifications",
    settings: "Settings",
    sign_out: "Sign Out",
    profile: "Profile",
    edit_profile: "Edit Profile",
    anonymous_mode: "Anonymous Mode",
    hide_status_from_friends: "Hide your status from friends",
    repeat_warnings: "Repeat Warnings",
    show_sin_warning_every_time: "Show sin warning every time",
    daily_reminder: "Daily Reminder",
    get_reminded_to_check_in: "Get reminded to check in daily",
    reminder_time: "Reminder Time",
    daily_goals: "Daily Goals",
    add_custom_goal: "Add custom goal...",
    theme_settings: "Theme Settings",
    groups: "Groups",
    your_groups: "Your Groups",
    join_group: "Join Group",
    create_group: "Create Group",
    group_name: "Group Name",
    group_code: "Group Code",
    create: "Create",
    join: "Join",
    cancel: "Cancel",
    members: "members",
    no_groups_yet: "No Groups Yet",
    join_or_create_group: "Join or create a group to stay accountable with your brothers",
    enter_group_code: "Enter group code to join",
    enter_group_name: "Enter group name to create",
    // v2.2 new translations
    prayer_times: "Prayer Times",
    fasting_tracker: "Fasting Tracker",
    completed: "completed",
    next_prayer: "Next Prayer",
    no_fast_today: "No fast scheduled for today",
    start_fast: "Start Fast",
    fast_type: "Fast Type",
    start: "Start",
    complete_fast: "Complete Fast",
    break_fast: "Break Fast",
    reason_optional: "Reason (optional)",
    reason: "Reason",
    confirm: "Confirm",
    this_week: "This Week",
    premium_features: "Premium Features",
    ai_coach: "AI Discipline Coach",
    custom_challenges: "Custom Challenges",
    advanced_stats: "Advanced Statistics",
    upgrade_to_premium: "Upgrade to Premium",
    lock_goal: "Lock Goal",
    days_to_lock: "Days to Lock",
    lock_reason: "Lock Reason",
    revival_tokens: "Revival Tokens",
    use_token: "Use Token",
    tokens_available: "available",
    quiet_mode: "Quiet Mode",
    private_mode: "Private Mode",
    public_accountability: "Public Accountability",
    blur_intensity: "Blur Intensity",
    font_choice: "Font Choice",
    auto_logout: "Auto Logout",
    minutes: "minutes",
    sub_groups: "Sub-Groups",
    group_events: "Group Events",
    create_event: "Create Event",
    event_title: "Event Title",
    event_description: "Event Description",
    start_date: "Start Date",
    end_date: "End Date",
    target_value: "Target Value",
    ramadan_challenge: "Ramadan Challenge",
    quran_completion: "Quran Completion",
    message_reactions: "Message Reactions",
    pin_message: "Pin Message",
    unpin_message: "Unpin Message",
    edit_message: "Edit Message",
    delete_message: "Delete Message",
    read_receipts: "Read Receipts",
  },
  nl: {
    stay_disciplined: "Blijf gedisciplineerd met je broeders",
    create_account: "Account Aanmaken",
    sign_in: "Inloggen", 
    honest_agreement: "Door verder te gaan, ga je ermee akkoord eerlijk te zijn over je vooruitgang en je broeders te ondersteunen in hun reis",
    welcome_back: "Welkom Terug",
    welcome_back_akhi: "Zet je reis met discipline voort",
    join_community: "Word lid van de broederschap van discipline",
    display_name: "Weergavenaam",
    email: "E-mail",
    password: "Wachtwoord",
    loading: "Laden...",
    success: "Succes",
    error: "Fout",
    dont_have_account: "Heb je geen account?",
    already_have_account: "Heb je al een account?",
    sign_up: "Registreren",
    notifications: "Meldingen",
    settings: "Instellingen",
    sign_out: "Uitloggen",
    profile: "Profiel",
    edit_profile: "Profiel Bewerken",
    anonymous_mode: "Anonieme Modus",
    hide_status_from_friends: "Verberg je status voor vrienden",
    repeat_warnings: "Waarschuwingen Herhalen",
    show_sin_warning_every_time: "Toon zonde waarschuwing elke keer",
    daily_reminder: "Dagelijkse Herinnering",
    get_reminded_to_check_in: "Krijg dagelijks een herinnering om in te checken",
    reminder_time: "Herinneringstijd",
    daily_goals: "Dagelijkse Doelen",
    add_custom_goal: "Aangepast doel toevoegen...",
    theme_settings: "Thema Instellingen",
    groups: "Groepen",
    your_groups: "Jouw Groepen",
    join_group: "Groep Deelnemen",
    create_group: "Groep Maken",
    group_name: "Groepsnaam",
    group_code: "Groepscode",
    create: "Maken",
    join: "Deelnemen",
    cancel: "Annuleren",
    members: "leden",
    no_groups_yet: "Nog Geen Groepen",
    join_or_create_group: "Doe mee of maak een groep om verantwoordelijk te blijven met je broeders",
    enter_group_code: "Voer groepscode in om deel te nemen",
    enter_group_name: "Voer groepsnaam in om te maken",
    // v2.2 new Dutch translations
    prayer_times: "Gebedsuren",
    fasting_tracker: "Vasten Tracker",
    completed: "voltooid",
    next_prayer: "Volgend Gebed",
    no_fast_today: "Geen vasten gepland voor vandaag",
    start_fast: "Vasten Beginnen",
    fast_type: "Vasten Type",
    start: "Begin",
    complete_fast: "Vasten Voltooien",
    break_fast: "Vasten Verbreken",
    reason_optional: "Reden (optioneel)",
    reason: "Reden",
    confirm: "Bevestigen",
    this_week: "Deze Week",
    premium_features: "Premium Functies",
    ai_coach: "AI Discipline Coach",
    custom_challenges: "Aangepaste Uitdagingen",
    advanced_stats: "Geavanceerde Statistieken",
    upgrade_to_premium: "Upgrade naar Premium",
    lock_goal: "Doel Vergrendelen",
    days_to_lock: "Dagen om te Vergrendelen",
    lock_reason: "Vergrendel Reden",
    revival_tokens: "Herstel Tokens",
    use_token: "Token Gebruiken",
    tokens_available: "beschikbaar",
    quiet_mode: "Stille Modus",
    private_mode: "PrivÃ© Modus",
    public_accountability: "Publieke Verantwoordelijkheid",
    blur_intensity: "Vervaging Intensiteit",
    font_choice: "Lettertype Keuze",
    auto_logout: "Automatisch Uitloggen",
    minutes: "minuten",
    sub_groups: "Sub-Groepen",
    group_events: "Groep Evenementen",
    create_event: "Evenement Maken",
    event_title: "Evenement Titel",
    event_description: "Evenement Beschrijving",
    start_date: "Startdatum",
    end_date: "Einddatum",
    target_value: "Doelwaarde",
    ramadan_challenge: "Ramadan Uitdaging",
    quran_completion: "Koran Voltooiing",
    message_reactions: "Bericht Reacties",
    pin_message: "Bericht Vastmaken",
    unpin_message: "Bericht Losmaken",
    edit_message: "Bericht Bewerken",
    delete_message: "Bericht Verwijderen",
    read_receipts: "Lees Bevestigingen",
  }
};

export const TranslationProvider = ({ children }: { children: ReactNode }) => {
  const [language, setLanguage] = useState<Language>('en');

  const t = (key: string): string => {
    return translations[language][key as keyof typeof translations['en']] || key;
  };

  return (
    <TranslationContext.Provider value={{ language, setLanguage, t }}>
      {children}
    </TranslationContext.Provider>
  );
};

export const useTranslation = () => {
  const context = useContext(TranslationContext);
  if (!context) {
    throw new Error('useTranslation must be used within a TranslationProvider');
  }
  return context;
};
